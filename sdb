#!/usr/bin/env python3

import sys

def D(fmt, *args, **kwargs):
    if(len(args) == 0 and len(kwargs) == 0):
        print(fmt)
    else:
        print(fmt.format(*args, **kwargs))

    sys.stdout.flush()

class AdbClient(object):
    def __init__(self):
        pass

    def connect(self, host='127.0.0.1', port=5037):
        import socket

        self.socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.socket.connect((host, port))

    def disconnect(self):
        assert(self.socket is not None)
        self.socket.close()

    def sendCommand(self, command):
        assert(self.socket is not None)
        cmd_len = len(command)
        len_string = "{:04x}".format(cmd_len)

        self.socket.send(bytes(len_string, 'ASCII'))
        rc = self.socket.sendall(command)
        assert(rc is None)

        data = self.socket.recv(4)
        if data != b'OKAY':
            raise Exception()

        data = self.socket.recv(4)
        reply_len = int(data, 16)

        return self.socket.recv(reply_len)

    def executeCommand(self, command):
        self.connect()
        data = self.sendCommand(command)
        self.disconnect()
        return data

    def getVersion(self):
        data = self.executeCommand(b'host:version')
        version = int(data, 16)
        return version

    def listDevices(self):
        data = self.executeCommand(b'host:devices')
        return str(data, 'ascii')

def show_version(adb):
    version = adb.getVersion()
    D("adb server version: {}", version)

def list_devices(adb):
    devices = adb.listDevices()
    D(devices)

COMMANDS = {
    'version': show_version,
    'devices': list_devices,
}

def usage():
    D("Usage: {} <command>", sys.argv[0])
    D("")
    D("Available commands:")
    for cmd in COMMANDS:
        D("    {}", cmd)

def main(args):
    if len(args) == 1:
        usage()
        return

    command = args[1]
    if command not in COMMANDS:
        D("Unknonw command: '{}'", command)
        D("")
        usage()
        return

    do_function = COMMANDS[command]
    do_function(AdbClient())

if __name__ == "__main__":
    main(sys.argv)

